logging:
  level:
    <%= props.groupId %>: INFO
    org.springframework.boot.context: INFO
server:
  compression:
    enabled: true
  port: 8080
  servlet: 
    context-path: /<%= props.artifact %>
<% if (props.swagger) { %>springfox:
  documentation:
    swagger.v2.path: /v2/api-docs
    info:
      title: <%= props.name %>
      description: <%= props.name %> Docs.
      version: 1.0
    base-package: <%= props.groupId %><% } %>
<% if (props.actuator || props.influx) { %>management:
  server:
    port: 9090
  endpoints:
    web:
      exposure:
        include: '*'<% } %>
<% if (props.influx) { %>  metrics:
    export:
      influx:
        db: <%=props.artifact%>
        uri: http://<%=props.artifact%>_influxdb:8086<% } %>
spring:
  messages:
    basename: i18n/messages
<% if (props.redis) { %>  cache:
    type: redis<% } %>
<% if (props.mongodb) { %>  data:
    mongodb:
      host: <%=artifact%>_mongodb
      port: 27017
      database: <%=artifact%><% } %>
<% if (props.rabbit) { %>  rabbitmq:
    host: <%=props.artifact%>_rabbitmq
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    writeQueue: rabbit-queue
    readQueue: rabbit-dead-queue
    exchange: rabbit-exchange
    connection-timeout: 9000<% } %>
<% if (props.postgres) { %>  datasource:
    platform: postgresql
    url: jdbc:postgresql://<%=props.artifact%>_postgres:5432/postgres
    username: postgres
    password: pgdb<%=props.artifact%>@123
    continue-on-error: true<% } %>
<% if (props.jpa) { %>  jpa:
    hibernate:
      ddl-auto: update
    database: <%=props.databaseJpa%>
    database-platform: org.hibernate.dialect.<%=props.databaseDialect%>
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true<% } %>
<% if (props.kafka) { %>  kafka:
    consumer:
      bootstrap-servers: <%=props.artifact%>_kafka:9092
      group-id: <%=props.kafkaGroupId%>
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: <%=props.artifact%>_kafka:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer<% } %>
      